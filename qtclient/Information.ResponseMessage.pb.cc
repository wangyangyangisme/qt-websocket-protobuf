// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Information.ResponseMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Information.ResponseMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tutorial {

namespace {

const ::google::protobuf::Descriptor* ResponseMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Information_2eResponseMessage_2eproto() {
  protobuf_AddDesc_Information_2eResponseMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Information.ResponseMessage.proto");
  GOOGLE_CHECK(file != NULL);
  ResponseMessage_descriptor_ = file->message_type(0);
  static const int ResponseMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, service_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, issucceeded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, errors_),
  };
  ResponseMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseMessage_descriptor_,
      ResponseMessage::default_instance_,
      ResponseMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponseMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Information_2eResponseMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseMessage_descriptor_, &ResponseMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Information_2eResponseMessage_2eproto() {
  delete ResponseMessage::default_instance_;
  delete ResponseMessage_reflection_;
}

void protobuf_AddDesc_Information_2eResponseMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!Information.ResponseMessage.proto\022\010tut"
    "orial\032\031google/protobuf/any.proto\"{\n\017Resp"
    "onseMessage\022\017\n\007service\030\001 \001(\t\022\016\n\006format\030\002"
    " \001(\t\022\023\n\013isSucceeded\030\003 \001(\010\022\"\n\004data\030\004 \001(\0132"
    "\024.google.protobuf.Any\022\016\n\006errors\030\005 \001(\tb\006p"
    "roto3", 205);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Information.ResponseMessage.proto", &protobuf_RegisterTypes);
  ResponseMessage::default_instance_ = new ResponseMessage();
  ResponseMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Information_2eResponseMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Information_2eResponseMessage_2eproto {
  StaticDescriptorInitializer_Information_2eResponseMessage_2eproto() {
    protobuf_AddDesc_Information_2eResponseMessage_2eproto();
  }
} static_descriptor_initializer_Information_2eResponseMessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseMessage::kServiceFieldNumber;
const int ResponseMessage::kFormatFieldNumber;
const int ResponseMessage::kIsSucceededFieldNumber;
const int ResponseMessage::kDataFieldNumber;
const int ResponseMessage::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseMessage::ResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.ResponseMessage)
}

void ResponseMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  data_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
}

ResponseMessage::ResponseMessage(const ResponseMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tutorial.ResponseMessage)
}

void ResponseMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issucceeded_ = false;
  data_ = NULL;
  errors_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResponseMessage::~ResponseMessage() {
  // @@protoc_insertion_point(destructor:tutorial.ResponseMessage)
  SharedDtor();
}

void ResponseMessage::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errors_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete data_;
  }
}

void ResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseMessage_descriptor_;
}

const ResponseMessage& ResponseMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Information_2eResponseMessage_2eproto();
  return *default_instance_;
}

ResponseMessage* ResponseMessage::default_instance_ = NULL;

ResponseMessage* ResponseMessage::New(::google::protobuf::Arena* arena) const {
  ResponseMessage* n = new ResponseMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseMessage::Clear() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issucceeded_ = false;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.ResponseMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string service = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.ResponseMessage.service"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_format;
        break;
      }

      // optional string format = 2;
      case 2: {
        if (tag == 18) {
         parse_format:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->format().data(), this->format().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.ResponseMessage.format"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isSucceeded;
        break;
      }

      // optional bool isSucceeded = 3;
      case 3: {
        if (tag == 24) {
         parse_isSucceeded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issucceeded_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional .google.protobuf.Any data = 4;
      case 4: {
        if (tag == 34) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_errors;
        break;
      }

      // optional string errors = 5;
      case 5: {
        if (tag == 42) {
         parse_errors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errors()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errors().data(), this->errors().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.ResponseMessage.errors"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.ResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.ResponseMessage)
  return false;
#undef DO_
}

void ResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.ResponseMessage)
  // optional string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ResponseMessage.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // optional string format = 2;
  if (this->format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ResponseMessage.format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->format(), output);
  }

  // optional bool isSucceeded = 3;
  if (this->issucceeded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->issucceeded(), output);
  }

  // optional .google.protobuf.Any data = 4;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->data_, output);
  }

  // optional string errors = 5;
  if (this->errors().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errors().data(), this->errors().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ResponseMessage.errors");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->errors(), output);
  }

  // @@protoc_insertion_point(serialize_end:tutorial.ResponseMessage)
}

::google::protobuf::uint8* ResponseMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.ResponseMessage)
  // optional string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ResponseMessage.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // optional string format = 2;
  if (this->format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ResponseMessage.format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->format(), target);
  }

  // optional bool isSucceeded = 3;
  if (this->issucceeded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->issucceeded(), target);
  }

  // optional .google.protobuf.Any data = 4;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->data_, target);
  }

  // optional string errors = 5;
  if (this->errors().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errors().data(), this->errors().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ResponseMessage.errors");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->errors(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tutorial.ResponseMessage)
  return target;
}

int ResponseMessage::ByteSize() const {
  int total_size = 0;

  // optional string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // optional string format = 2;
  if (this->format().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format());
  }

  // optional bool isSucceeded = 3;
  if (this->issucceeded() != 0) {
    total_size += 1 + 1;
  }

  // optional .google.protobuf.Any data = 4;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // optional string errors = 5;
  if (this->errors().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errors());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResponseMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResponseMessage::MergeFrom(const ResponseMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.format().size() > 0) {

    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  if (from.issucceeded() != 0) {
    set_issucceeded(from.issucceeded());
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.errors().size() > 0) {

    errors_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errors_);
  }
}

void ResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseMessage::CopyFrom(const ResponseMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMessage::IsInitialized() const {

  return true;
}

void ResponseMessage::Swap(ResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseMessage::InternalSwap(ResponseMessage* other) {
  service_.Swap(&other->service_);
  format_.Swap(&other->format_);
  std::swap(issucceeded_, other->issucceeded_);
  std::swap(data_, other->data_);
  errors_.Swap(&other->errors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseMessage_descriptor_;
  metadata.reflection = ResponseMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseMessage

// optional string service = 1;
void ResponseMessage::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ResponseMessage::service() const {
  // @@protoc_insertion_point(field_get:tutorial.ResponseMessage.service)
  return service_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseMessage::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.ResponseMessage.service)
}
 void ResponseMessage::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.ResponseMessage.service)
}
 void ResponseMessage::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.ResponseMessage.service)
}
 ::std::string* ResponseMessage::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.ResponseMessage.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ResponseMessage::release_service() {
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseMessage::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:tutorial.ResponseMessage.service)
}

// optional string format = 2;
void ResponseMessage::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ResponseMessage::format() const {
  // @@protoc_insertion_point(field_get:tutorial.ResponseMessage.format)
  return format_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseMessage::set_format(const ::std::string& value) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.ResponseMessage.format)
}
 void ResponseMessage::set_format(const char* value) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.ResponseMessage.format)
}
 void ResponseMessage::set_format(const char* value, size_t size) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.ResponseMessage.format)
}
 ::std::string* ResponseMessage::mutable_format() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.ResponseMessage.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ResponseMessage::release_format() {
  
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseMessage::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    
  } else {
    
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:tutorial.ResponseMessage.format)
}

// optional bool isSucceeded = 3;
void ResponseMessage::clear_issucceeded() {
  issucceeded_ = false;
}
 bool ResponseMessage::issucceeded() const {
  // @@protoc_insertion_point(field_get:tutorial.ResponseMessage.isSucceeded)
  return issucceeded_;
}
 void ResponseMessage::set_issucceeded(bool value) {
  
  issucceeded_ = value;
  // @@protoc_insertion_point(field_set:tutorial.ResponseMessage.isSucceeded)
}

// optional .google.protobuf.Any data = 4;
bool ResponseMessage::has_data() const {
  return !_is_default_instance_ && data_ != NULL;
}
void ResponseMessage::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& ResponseMessage::data() const {
  // @@protoc_insertion_point(field_get:tutorial.ResponseMessage.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
::google::protobuf::Any* ResponseMessage::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:tutorial.ResponseMessage.data)
  return data_;
}
::google::protobuf::Any* ResponseMessage::release_data() {
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void ResponseMessage::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tutorial.ResponseMessage.data)
}

// optional string errors = 5;
void ResponseMessage::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ResponseMessage::errors() const {
  // @@protoc_insertion_point(field_get:tutorial.ResponseMessage.errors)
  return errors_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseMessage::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.ResponseMessage.errors)
}
 void ResponseMessage::set_errors(const char* value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.ResponseMessage.errors)
}
 void ResponseMessage::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.ResponseMessage.errors)
}
 ::std::string* ResponseMessage::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.ResponseMessage.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ResponseMessage::release_errors() {
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResponseMessage::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:tutorial.ResponseMessage.errors)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)
